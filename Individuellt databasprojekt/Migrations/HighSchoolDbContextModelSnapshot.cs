// <auto-generated />
using System;
using Individuellt_databasprojekt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Individuellt_databasprojekt.Migrations
{
    [DbContext(typeof(HighSchoolDbContext))]
    partial class HighSchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClassID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ClassId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfHired")
                        .HasColumnType("date");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ProffesionId")
                        .HasColumnName("ProffesionID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(5, 3)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ProffesionId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GenderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("GenderId");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GradeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfGrade")
                        .HasColumnType("date");

                    b.Property<int?>("EmployerId")
                        .HasColumnName("EmployerID")
                        .HasColumnType("int");

                    b.Property<int?>("Grade1")
                        .HasColumnName("Grade")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnName("StudentID")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnName("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("GradeId");

                    b.HasIndex("EmployerId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.ImportanStudentInfo", b =>
                {
                    b.Property<int>("InfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("infoID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StudentId")
                        .HasColumnName("StudentID")
                        .HasColumnType("int");

                    b.HasKey("InfoId");

                    b.HasIndex("StudentId");

                    b.ToTable("importanStudentInfo");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Proffesion", b =>
                {
                    b.Property<int>("ProffessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProffessionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProffessionName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProffessionId");

                    b.ToTable("Proffesion");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ClassId")
                        .HasColumnName("ClassID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("GenderId")
                        .HasColumnName("GenderID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PersonNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("GenderId");

                    b.ToTable("Student ");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubjectID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAcctive")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SubjectId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Employee", b =>
                {
                    b.HasOne("Individuellt_databasprojekt.Models.Department", "Department")
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Employee_Department");

                    b.HasOne("Individuellt_databasprojekt.Models.Proffesion", "Proffesion")
                        .WithMany("Employee")
                        .HasForeignKey("ProffesionId")
                        .HasConstraintName("FK_Employee_Proffesion");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Grade", b =>
                {
                    b.HasOne("Individuellt_databasprojekt.Models.Employee", "Employer")
                        .WithMany("Grade")
                        .HasForeignKey("EmployerId")
                        .HasConstraintName("FK_Grade_Employee");

                    b.HasOne("Individuellt_databasprojekt.Models.Student", "Student")
                        .WithMany("Grade")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Grade_Student ");

                    b.HasOne("Individuellt_databasprojekt.Models.Subject", "Subject")
                        .WithMany("Grade")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Grade_Subject");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.ImportanStudentInfo", b =>
                {
                    b.HasOne("Individuellt_databasprojekt.Models.Student", "Student")
                        .WithMany("ImportanStudentInfo")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_importanStudentInfo_Student ");
                });

            modelBuilder.Entity("Individuellt_databasprojekt.Models.Student", b =>
                {
                    b.HasOne("Individuellt_databasprojekt.Models.Class", "Class")
                        .WithMany("Student")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_Student _Class");

                    b.HasOne("Individuellt_databasprojekt.Models.Gender", "Gender")
                        .WithMany("Student")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_Student _Gender");
                });
#pragma warning restore 612, 618
        }
    }
}
